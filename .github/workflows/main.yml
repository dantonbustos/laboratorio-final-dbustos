name: Deploy Laboratorio Final DevSecOps / Staging
on:
  push:
    branches:
      - staging
env:
  IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/devsecops-lab-final      
jobs:
  # Ejecutar SAST -> Usar SonarCloud o herramienta similar.
  check-sast:
    runs-on: ubuntu-latest
    name: Exec SAST
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v2.0.2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  # Ejecutar SCA ->Usar Dependency Check o similar.
  check-sca:
    runs-on: ubuntu-latest
    name: Exec SCA
    needs: check-sast
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  # Construcci칩n de la Imagen Docker.
  build-image:
    runs-on: ubuntu-latest
    name: Build Docker Image
    needs: [check-sast, check-sca]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker Login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ vars.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:${{ github.sha }} .
      - name: Push Docker Image
        run: docker push $IMAGE_NAME:${{ github.sha }}
  # Image Security -> Usar Trivy o similar.
  check-image-security:
    runs-on: ubuntu-latest
    name: Image Security
    needs: build-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ env.IMAGE_NAME }}:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
  # An치lisis DAST -> Usar Owasp ZAP o similar
  zap_scan:
    runs-on: ubuntu-latest
    name: Exec DAST
    needs: check-image-security
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: staging
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://staging.localhost'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
  # Despliegue de la aplicaci칩n -> Puede utilizar Minikube o Docker de su equipo(notebook).
  deploy-container:
    runs-on: ubuntu-latest
    name: Despliegue Aplicaci칩n 
    needs: zap_scan
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Docker Image
        id: build-image
        run: |
          docker pull $IMAGE_NAME:${{ github.sha }}
          docker run -d -p 8080:80 --name devsecops-app $IMAGE_NAME:${{ github.sha }}